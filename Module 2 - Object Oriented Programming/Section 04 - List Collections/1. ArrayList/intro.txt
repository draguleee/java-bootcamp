-------------------------------------------------------------------------------------------------------------------

Introduction to ArrayList

-------------------------------------------------------------------------------------------------------------------


1. The Problem with Arrays

Working with arrays can be quite cumbersome, especially when it comes to resizing them. Arrays are fixed in size, meaning that once you create an array with a specific length, you cannot change its size without creating a new array.

Let's say you have an array of integers and you want to add an element at the end:

// Create an array containing three elements
int[] numbers = {1, 2, 3};

// Create a new array having the length of the first array + 1 (4)
int[] newNumbers = new int[numbers.length + 1];

// Set every element from newNumbers array to be equal to numbers array at the specified index
for (int i = 0; i < numbers.length; i++) {
    newNumbers[i] = numbers[i];
}

// Set the element at index numbers.length (3) to be 4.
newNumbers[numbers.length] = 4;

=> We had to create a new array, copy the elements from the old array, and then add the new element.


-------------------------------------------------------------------------------------------------------------------


2. Introducing ArrayList

ArrayList automatically handles resizing when elements are added or removed, making it easier to work with.

The following code creates an ArrayList that can store integers:
List<Integer> numbersList = new ArrayList();

You can use an add method to add elements in the ArrayList:
numbersList.add(0);
numbersList.add(1);
numbersList.add(2);

You can use a remove method to remove elements from the ArrayList:
numbersList.remove(0);
numbersList.remove(1);
numbersList.remove(2);

Working with ArrayList is much simpler than using regular arrays. The ArrayList automatically manages the complexities of resizing, adding, and removing elements behind the scenes for you.

-------------------------------------------------------------------------------------------------------------------


3. Looking behind the curtain

Working with ArrayLists is incredibly convenient, and while you only need to remember a few lines of code, gaining some insight into how it actually resizes when you add or remove elements is very interesting. 

In the next Udemy lesson, we will use breakpoints to peek behind the curtains of ArrayList. The code is going to look a bit scary, since it was written by the Java developers themselves.

However, during this lesson, try not to get caught up in the details of the code; instead, focus on understaning the general mechanisms that make the ArrayList powerful and efficient.

-------------------------------------------------------------------------------------------------------------------
