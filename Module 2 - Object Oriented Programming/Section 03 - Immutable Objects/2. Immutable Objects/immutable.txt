---------------------------------------------------------------------------------------------------------------------

Immutable object types:
* Integer
* Long
* Double
* Character
* Boolean
* String

What is an immutable object?
* An immutable object is a object whose state cannot be modified after its creation
* For every primitive type, there is an immutable object type


Immutable objects take up more size in memory:
* Because class type variables store a reference to an object that wraps the value

Immutable objects can be null; primitive types cannot:
* Because class type variables are able to reference an object

Immutable objects can call methods; primitive types cannot:
* We can invoke methods tha are implemented in the classes



Memory differences:
* int: 4 bytes     :::   Integer: 16 bytes
* long: 8 bytes    :::   Long: 24 bytes
* double: 8 bytes  :::   Double: 24 bytes
* char: 2 bytes    :::   Character: 16 bytes
* boolean: 1 bit   :::   Boolean: 16 bytes

Keep in mind this rule!
* Favor Primitive over Immutable Objects because they consume less memory!
* Only use Immutable Objects when you have no other choice!

Example:
* List: ArrayList and LinkedList ca only store objects

---------------------------------------------------------------------------------------------------------------------